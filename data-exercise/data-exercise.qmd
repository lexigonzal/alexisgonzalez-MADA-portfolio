---
title: "Moduel 4 Exercise"
---


#For this excercise I will be doing image data exploration.For this, I will use images from the MNIST digits dataset. This is a large database of handwritten digits, typically used to train image processing systems.

```{r}
#Load packages
library(keras)
library(magick)
library(torch)
library(imager)
library(ggplot2)
library(tensorflow)
```

#Load in the mnist dataset. this uses the keras package
```{r}
install_tensorflow()
```


```{r}
mnist <-dataset_mnist()
```

```{r}
images <- mnist$train$x
lables <- mnist$train$y
```

```{r}
dim(images)
```
#Plot the first few images
```{r}
par(mfrow=c(2,5), mar=c(1,1,1,1))
for(i in 1:10) {
  image(1:28,1:28,images[i, ,28:1], col=gray.colors(256),main = lables[i])
}
```
#Now we can do some data exploration
```{r}
#Lets see the distributionof digits in this data set. how many of each digit exist.

table(mnist$train$y)
barplot(table(mnist$train$y),
        col = "firebrick",
        main = "Distribution of Digits",
        xlab = "digit",ylab = "frequency")
```
#So there are thousands of images for each digit. With thw following code I can see what the "average" digit looks like
```{r}
#compute average digit
avg_images <- lapply(0:9, function(digit) {
  inds <- which(mnist$train$y == digit)
  mean_image <- apply(mnist$train$x[inds, ,], c(2,3), mean)
  return(mean_image)
})

# Normalize function
normalize <- function(x) (x - min(x)) / (max(x) - min(x))

# Plot average images for digits 0 to 9
par(mfrow = c(2, 5), mar = c(1, 1, 1, 1))
for (i in 0:9) {
  img <- normalize(avg_images[[i + 1]])
  image(1:28, 1:28, img[, 28:1], col = gray.colors(256), main = i)
}

```


