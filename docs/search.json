[
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda copy.html",
    "href": "starter-analysis-exercise/code/eda-code/eda copy.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/vince/OneDrive/Desktop/MADA-FORK-TWO/alexisgonzalez-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Hair Color            0             1   3   6     0        3          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean    sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0  133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2   45  55  70  80  110 ▇▂▃▂▂\n3 Thumb Length          0             1  47.4  8.35  35  42  47  50   62 ▅▅▇▁▅\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\nBelow is a boxplot of hair color v. height\n\np5 &lt;- mydata %&gt;% ggplot(aes(x=`Hair Color`, y=Height)) + geom_boxplot(color=\"firebrick3\") \nplot(p5)\n\n\n\n\n\n\n\nfigure_file=here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-hair-boxplot.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\nBelow is a scatterplot of thumb size v. weight.\n\np6 &lt;- mydata %&gt;% ggplot(aes(x=Weight, y=`Thumb Length`)) + \n  geom_point(size=2, color=\"firebrick3\")\nplot(p6)\n\n\n\n\n\n\n\nfigure_file=here(\"starter-analysis-exercise\",\"results\",\"figures\",\"thumbsize-weight-scatterplot.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/vince/OneDrive/Desktop/MADA-FORK-TWO/alexisgonzalez-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "aboutme.html#interestshobbies",
    "href": "aboutme.html#interestshobbies",
    "title": "About me",
    "section": "Interests/hobbies",
    "text": "Interests/hobbies\nIn my free time I like to play video games.\nCurrent game is God of War\nI’m an avid baker, my home is constantly stocked with some sort of baked good. In contradiction to that, I am really interested in health and wellness and try to spend time in the gym or outdoors. :)\nI look forward to learning and adding to my portfolio!"
  },
  {
    "objectID": "aboutme.html#cool-data",
    "href": "aboutme.html#cool-data",
    "title": "About me",
    "section": "Cool data:",
    "text": "Cool data:\nI found this a few months ago looking for a coffee shop near me. Someone mapped out basically all of the coffee shops in the atl/metro atl area. I love coffee and cafes so it has definitely come in handy. Its color coded to quickly give an idea of what part of atl the shop is in. Maybe i’ll try to visit them all someday…\nhttps://www.atlantacoffeeshops.com/atlanta-coffee-map"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Placeholder file for the future R coding exercise.\n#adding in the dslabs package and other packages\nlibrary(dslabs)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n✔ readr     2.1.5     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(here)\n\nhere() starts at /Users/alexisgonzalez/Desktop/MADA/alexisgonzalez-MADA-portfolio\n#dslabs is now in and datasets are available\n#next is to read help file for gapminder\nhelp(gapminder)\n#get an overview of data structure and summary\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586\n#determine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\"\n#Assign african countries to new variable africadata\nafricadata &lt;- subset(gapminder, continent == \"Africa\")\n#Checking the new variable\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0\n#taking object africadata and creating mortlife (infant mortality x life expectancy) using the dplyr package\nmortlife &lt;- africadata %&gt;%\n  select(infant_mortality,life_expectancy)\n#check the new object\nstr(mortlife)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(mortlife)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226\n#repeat the same process but create new object poplife (population x life expectancy) using dplyr\npoplife &lt;- africadata %&gt;%\n  select(population,life_expectancy)\n#check new object poplife\nstr(poplife)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(poplife)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51\n#plotting life expectancy as a function of infant mortality \nggplot(mortlife, aes(x = life_expectancy, y = infant_mortality, color=\"blue\")) + geom_point()\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nfigure_file=here(\"coding-exercise\",\"lifeexpectancyxinfantmortality.png\")\nggsave(filename = figure_file)\n\nSaving 7 x 5 in image\n\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n#plotting population as a function of life expectancy\n# I used chatgpt to get the code for making the x variable on the log scale\nggplot(poplife, aes(x = population, y = life_expectancy, color=\"blue\")) + geom_point() + scale_x_log10()\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n figure_file=here(\"coding-exercise\",\"populationxlifeexpectancy.png\")\n#figuring out what years have missing infant mortality data\nmissing_data_years &lt;- africadata %&gt;%\n  filter(is.na(infant_mortality)) %&gt;%\n  select(year) %&gt;%\n  distinct()\nprint(missing_data_years)\n\n   year\n1  1960\n2  1961\n3  1962\n4  1963\n5  1964\n6  1965\n7  1966\n8  1967\n9  1968\n10 1969\n11 1970\n12 1971\n13 1972\n14 1973\n15 1974\n16 1975\n17 1976\n18 1977\n19 1978\n20 1979\n21 1980\n22 1981\n23 2016"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nHi my name is Alexis\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Hope Grismer contributed to this excercise\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\nWarning: package 'knitr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n248.784981\n13.224621\n18.8122576\n0.0000078\n\n\nHair ColorBrown\n-12.962131\n5.296530\n-2.4472876\n0.0581300\n\n\nHair ColorRed\n3.152118\n6.389235\n0.4933482\n0.6426696\n\n\nThumb Length\n-1.614891\n0.270587\n-5.9681015\n0.0018907"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#box-plot-height-x-hair-color",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#box-plot-height-x-hair-color",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.1 6.1 Box plot Height x Hair Color",
    "text": "6.1 6.1 Box plot Height x Hair Color\nThis box plot visualizes the distribution of height across 3 different hair colors. The range of heights in the Brown hair category is wider than that of Blonde and Red hair. This would show that while Brown haired individuals are more common and exist in a range of heights, they tend to be shorter than Red haired and Blond haired individuals.\n\np5 &lt;- mydata %&gt;% ggplot(aes(x=`Hair Color`, y=Height)) + \n  geom_boxplot(color=\"firebrick3\") \nplot(p5)\n\n\n\n\n\n\n\nfigure_file=here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-hair-boxplot.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatter-plot-weight-x-thumb-length",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatter-plot-weight-x-thumb-length",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.2 6.2 Scatter plot Weight x Thumb Length",
    "text": "6.2 6.2 Scatter plot Weight x Thumb Length\nThis scatter plot shows the relationship between weight and thumb length. A slight negative trend can be seen, as weight increases, thumb length decreases.\n\np6 &lt;- mydata %&gt;% ggplot(aes(x=Weight, y=`Thumb Length`)) + \n  geom_point(size=2, color=\"firebrick3\")\nplot(p6)\n\n\n\n\n\n\n\nfigure_file=here(\"starter-analysis-exercise\",\"results\",\"figures\",\"thumbsize-weight-scatterplot.png\")\nggsave(filename = figure_file, plot=p6)\n\nSaving 7 x 5 in image\n\n\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/vince/OneDrive/Desktop/MADA-FORK-TWO/alexisgonzalez-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/vince/OneDrive/Desktop/MADA-FORK-TWO/alexisgonzalez-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n4 Hair color      Color of natural unaltered hair       Brown,Blonde,Red      \n5 Thumb length    length in cm                          numeric value &gt;0 or NA\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height         &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\",…\n$ Weight         &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, …\n$ Gender         &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\",…\n$ `Hair Color`   &lt;chr&gt; \"Brown\", \"Brown\", \"Blonde\", \"Red\", \"Blonde\", \"Blonde\", …\n$ `Thumb Length` &lt;dbl&gt; 35, 40, 37, 42, 36, 45, 50, 57, 61, 38, 43, 62, 47, 49\n\nsummary(rawdata)\n\n    Height              Weight          Gender           Hair Color       \n Length:14          Min.   :  45.0   Length:14          Length:14         \n Class :character   1st Qu.:  55.0   Class :character   Class :character  \n Mode  :character   Median :  70.0   Mode  :character   Mode  :character  \n                    Mean   : 602.7                                        \n                    3rd Qu.:  90.0                                        \n                    Max.   :7000.0                                        \n                    NA's   :1                                             \n  Thumb Length  \n Min.   :35.00  \n 1st Qu.:38.50  \n Median :44.00  \n Mean   :45.86  \n 3rd Qu.:49.75  \n Max.   :62.00  \n                \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender `Hair Color` `Thumb Length`\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;                 &lt;dbl&gt;\n1 180        80 M      Brown                    35\n2 175        70 O      Brown                    40\n3 sixty      60 F      Blonde                   37\n4 178        76 F      Red                      42\n5 192        90 NA     Blonde                   36\n6 6          55 F      Blonde                   45\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.0\n70\n90.00\n7000\n▇▁▁▁▁\n\n\nThumb Length\n0\n1.00\n45.86\n9.01\n35\n38.5\n44\n49.75\n62\n▇▅▅▁▅\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nThumb Length\n0\n1.00\n46.54\n9.00\n35\n40.00\n45\n50\n62\n▇▆▆▁▆\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nThumb Length\n0\n1.00\n46.54\n9.00\n35\n40.00\n45\n50\n62\n▇▆▆▁▆\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nThumb Length\n0\n1\n47.64\n9.34\n35\n41.0\n47\n53.5\n62\n▇▅▇▁▇\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHair Color\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nThumb Length\n0\n1\n47.64\n9.34\n35\n41.0\n47\n53.5\n62\n▇▅▇▁▇\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHair Color\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nThumb Length\n0\n1\n47.44\n8.35\n35\n42\n47\n50\n62\n▅▅▇▁▅\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Alexis Gonzalez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#this-following-section-is-contributed-by-vincent-nguyen",
    "href": "coding-exercise/coding-exercise.html#this-following-section-is-contributed-by-vincent-nguyen",
    "title": "R Coding Exercise",
    "section": "This following section is contributed by Vincent Nguyen",
    "text": "This following section is contributed by Vincent Nguyen\nThis analysis begins with loading and inspecting the data set, us_contagious_diseases\n\n# load in the package dslabs\nlibrary(dslabs)\n\n# load in the dataset, us_contagious_diseases\ndata(\"us_contagious_diseases\")\n\n# look at help file for data\nhelp(\"us_contagious_diseases\")\n\n# get an overview of data structure\nstr(us_contagious_diseases)\n\n'data.frame':   16065 obs. of  6 variables:\n $ disease        : Factor w/ 7 levels \"Hepatitis A\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ state          : Factor w/ 51 levels \"Alabama\",\"Alaska\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ year           : num  1966 1967 1968 1969 1970 ...\n $ weeks_reporting: num  50 49 52 49 51 51 45 45 45 46 ...\n $ count          : num  321 291 314 380 413 378 342 467 244 286 ...\n $ population     : num  3345787 3364130 3386068 3412450 3444165 ...\n\n# get a summary of the data\nsummary(us_contagious_diseases)\n\n        disease            state            year      weeks_reporting\n Hepatitis A:2346   Alabama   :  315   Min.   :1928   Min.   : 0.00  \n Measles    :3825   Alaska    :  315   1st Qu.:1950   1st Qu.:31.00  \n Mumps      :1785   Arizona   :  315   Median :1975   Median :46.00  \n Pertussis  :2856   Arkansas  :  315   Mean   :1971   Mean   :37.38  \n Polio      :2091   California:  315   3rd Qu.:1990   3rd Qu.:50.00  \n Rubella    :1887   Colorado  :  315   Max.   :2011   Max.   :52.00  \n Smallpox   :1275   (Other)   :14175                                 \n     count          population      \n Min.   :     0   Min.   :   86853  \n 1st Qu.:     7   1st Qu.: 1018755  \n Median :    69   Median : 2749249  \n Mean   :  1492   Mean   : 4107584  \n 3rd Qu.:   525   3rd Qu.: 4996229  \n Max.   :132342   Max.   :37607525  \n                  NA's   :214       \n\n# determine the type of object data is\nclass(us_contagious_diseases)\n\n[1] \"data.frame\"\n\n\nThis section of the analysis focuses on creating objects using the data set. The object, hepadata, is created to narrow the scope of the analysis to just Hepatitis A data. The objects, georgiadata and californiadata, are created to focus on Hepatitis A data in these states. Additionally, a new column is added to calculate incidence rates. Lastly, a dataframe is created, combining the data from both states. This is later used for another part of the analysis.\n\n# load tidyverse package\nlibrary(tidyverse)\n\n# create new object only containing pertussis data\nhepadata &lt;- us_contagious_diseases %&gt;%\n  filter(disease == \"Hepatitis A\")\n\n# create a new object containing data from only Georgia and create new incidence rate variable\ngeorgiadata &lt;- hepadata %&gt;%\n  filter(state == \"Georgia\") %&gt;%\n  mutate(incidence_rate = (count / population) * 100000)\n\n# create a new object containing data from only California and create new incidence rate variable\ncaliforniadata &lt;- hepadata %&gt;%\n  filter(state == \"California\")%&gt;%\n  mutate(incidence_rate = (count / population) * 100000)\n\n# create a new object containing both for comparisions later\n\n# first need to add new column so that each dataset indicates the state\ngeorgiadata$state &lt;- \"Georgia\"\ncaliforniadata$state &lt;- \"California\"\n\n# combine data sets into one\ncombined_data &lt;- rbind(georgiadata, californiadata)\n\nThis section creates a graph outlining the change in incidence rate over time in the state of GA and CA.\n\n# load package ggplot2\nlibrary(ggplot2)\n\n# create graph plotting year as x and incidence rate as y for Georgia\ngeorgia_incidence_graph &lt;- ggplot(georgiadata, aes(x = year, y = incidence_rate)) + geom_point(alpha = 0.6, color = \"blue\") + labs(\n  title = \"Incidence rate of Hep. A over time in Georgia\",\n  x = \"Time\",\n  y = \"Incidence (per 100,000\" )\n\n# display the newly created graph\nprint(georgia_incidence_graph)\n\n\n\n\n\n\n\n# create graph plotting year as x and incidence rate as y for California\ncalifornia_incidence_graph &lt;- ggplot(californiadata, aes(x = year, y = incidence_rate)) + geom_point(alpha = 0.6, color = \"blue\") + labs(\n  title = \"Incidence rate of Hep. A over time in California\",\n  x = \"Time\",\n  y = \"Incidence (per 100,000\" )\n\n# display the newly created graph\nprint(california_incidence_graph)\n\n\n\n\n\n\n\n\nThis section creates a simple linear model to analyze the interaction of incidence rate over time across the two states.\n\n# linear model with interaction between year and state\nlm_model &lt;- lm(incidence_rate ~ year * state, data = combined_data)\nsummary(lm_model)\n\n\nCall:\nlm(formula = incidence_rate ~ year * state, data = combined_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9.8860 -3.8762  0.1214  2.4986 19.5427 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)        1.899e+03  1.196e+02  15.876  &lt; 2e-16 ***\nyear              -9.462e-01  6.014e-02 -15.732  &lt; 2e-16 ***\nstateGeorgia      -1.014e+03  1.691e+02  -5.998 4.33e-08 ***\nyear:stateGeorgia  5.054e-01  8.506e-02   5.942 5.53e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.415 on 88 degrees of freedom\nMultiple R-squared:  0.8088,    Adjusted R-squared:  0.8023 \nF-statistic: 124.1 on 3 and 88 DF,  p-value: &lt; 2.2e-16\n\n\nFrom these results, it can be concluded that Georgia has a significantly lower baseline incidence rate of Hepatitis A compared to California, and additionally, the change in incidence over time differs between the two states. The interaction term between year and state indicates that the change in incidence over time is significantly different between the two states. The incidence rate in California significantly decreases at a greater rate than Georgia indicating a possibly more effective response to Hepatitis A."
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Moduel 4 Exercise",
    "section": "",
    "text": "For this exercise I will be analyzing an Image. #The first step is to load in the necessary packages for exploring images. This will be magick and imager. Both packages can be used to manipulate the images properties such as its size, colors, effects, and even animating. Imager won’t run on MacOS unless you install XQuartz first here\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(magick)\n\nLinking to ImageMagick 6.9.12.93\nEnabled features: cairo, fontconfig, freetype, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fftw, ghostscript, x11\n\nlibrary(imager)\n\nLoading required package: magrittr\n\nAttaching package: 'magrittr'\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\n\nAttaching package: 'imager'\n\nThe following object is masked from 'package:magrittr':\n\n    add\n\nThe following object is masked from 'package:stringr':\n\n    boundary\n\nThe following object is masked from 'package:dplyr':\n\n    where\n\nThe following object is masked from 'package:tidyr':\n\n    fill\n\nThe following objects are masked from 'package:stats':\n\n    convolve, spectrum\n\nThe following object is masked from 'package:graphics':\n\n    frame\n\nThe following object is masked from 'package:base':\n\n    save.image\n\n\n\nNow I will load in my images, my images are characters from a show so I will use their names\n\njjk &lt;- list(\n  itadori = image_read(\"/Users/alexisgonzalez/Downloads/itadori.jpg\"),\n  nobara = image_read(\"/Users/alexisgonzalez/Downloads/nobara.jpg\"),\n  megumi = image_read(\"/Users/alexisgonzalez/Downloads/megumi.jpg\"),\n  nanami = image_read(\"/Users/alexisgonzalez/Downloads/nanami.jpg\"),\n  gojo = image_read(\"/Users/alexisgonzalez/Downloads/gojo.jpg\"),\n  sukuna = image_read(\"/Users/alexisgonzalez/Downloads/sukuna.jpg\")\n  )\n\n\n\nThe sizes of the images are different so I’m going to make them all the same 640x640\n\nresized_images &lt;- lapply(jjk, function(img) {image_resize(img, \"640x640\" )})\n\n\n\nNow I can combine all of these images and turn them into a gif\n\ngif &lt;- image_animate(image_join(resized_images), fps = 5)\n\n\n\nNow I view my gif, it should play in the window on the bottom left\n\nprint(gif)\n\n# A tibble: 6 × 7\n  format width height colorspace matte filesize density\n  &lt;chr&gt;  &lt;int&gt;  &lt;int&gt; &lt;chr&gt;      &lt;lgl&gt;    &lt;int&gt; &lt;chr&gt;  \n1 gif      639    640 sRGB       FALSE        0 72x72  \n2 gif      639    640 sRGB       TRUE         0 72x72  \n3 gif      639    640 sRGB       TRUE         0 72x72  \n4 gif      639    640 sRGB       TRUE         0 72x72  \n5 gif      639    640 sRGB       TRUE         0 72x72  \n6 gif      639    640 sRGB       TRUE         0 72x72"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-excercise.html",
    "href": "cdcdata-exercise/cdcdata-excercise.html",
    "title": "Moduel 5 Exercise",
    "section": "",
    "text": "CDC Data exploration\n\nThe data set being used for this exercise is the Prevalence of Disability Statues and Types by Demographic Groups (2021) from the Disability and Health Data System (DHDS). DHDS collects state-level data on adults with disabilities. Disabilities are categorized by 6 disability types: cognitive, hearing, mobility, vision, self care (difficulty dressing or bathing), and independent living. This data is collected through the Behavioral Risk Factor Surveillance System using telephone interviews. Participants must be non-institutionalized and 18 years or older. The data can be found here https://data.cdc.gov/Disability-Health/DHDS-Prevalence-of-Disability-Status-and-Types-by-/qjg3-6acf/about_data .\n\n\n\n\nNow I will load in the dataset\n\ncdcdata &lt;- read_csv(\"/Users/alexisgonzalez/Desktop/MADA/alexisgonzalez-MADA-portfolio/cdcdata-exercise/DHDS_-_Prevalence_of_Disability_Status_and_Types_by_Demographic_Groups__2021_20250204.csv\")\n\nRows: 7168 Columns: 30\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (18): LocationAbbr, LocationDesc, DataSource, Category, Indicator, Respo...\ndbl  (8): Year, Data_Value, Data_Value_Alt, Low_Confidence_Limit, High_Confi...\nlgl  (4): StratificationCategory2, Stratification2, StratificationCategoryID...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nstr(cdcdata)\n\nspc_tbl_ [7,168 × 30] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                      : num [1:7168] 2021 2021 2021 2021 2021 ...\n $ LocationAbbr              : chr [1:7168] \"GU\" \"HHS8\" \"GU\" \"GU\" ...\n $ LocationDesc              : chr [1:7168] \"Guam\" \"HHS Region 8\" \"Guam\" \"Guam\" ...\n $ DataSource                : chr [1:7168] \"BRFSS\" \"BRFSS\" \"BRFSS\" \"BRFSS\" ...\n $ Category                  : chr [1:7168] \"Disability Estimates\" \"Disability Estimates\" \"Disability Estimates\" \"Disability Estimates\" ...\n $ Indicator                 : chr [1:7168] \"Disability status and types among adults 18 years of age or older by race/ethnicity\" \"Disability status and types among adults 18 years of age or older by age group\" \"Disability status and types among adults 18 years of age or older by age group\" \"Disability status and types among adults 18 years of age or older by age group\" ...\n $ Response                  : chr [1:7168] \"Black, non-Hispanic\" \"45-64\" \"45-64\" \"18-44\" ...\n $ Data_Value_Unit           : chr [1:7168] \"%\" \"%\" \"%\" \"%\" ...\n $ Data_Value_Type           : chr [1:7168] \"Age-adjusted Prevalence\" \"Prevalence\" \"Prevalence\" \"Prevalence\" ...\n $ Data_Value                : num [1:7168] NA 3.5 56.2 19.7 65.1 27.8 57.8 15.4 NA 9.4 ...\n $ Data_Value_Alt            : num [1:7168] NA 3.5 56.2 19.7 65.1 27.8 57.8 15.4 NA 9.4 ...\n $ Data_Value_Footnote_Symbol: chr [1:7168] \"*\" NA NA NA ...\n $ Data_Value_Footnote       : chr [1:7168] \"Data suppressed\" NA NA NA ...\n $ Low_Confidence_Limit      : num [1:7168] NA 3.1 47.2 15.3 62.5 25.6 43.3 14.1 NA 8.4 ...\n $ High_Confidence_Limit     : num [1:7168] NA 3.9 64.7 25.1 67.7 30.1 70.9 16.7 NA 10.5 ...\n $ Number                    : num [1:7168] NA 516 393 105 1657 ...\n $ WeightedNumber            : num [1:7168] NA 95963 17420 11422 1092182 ...\n $ StratificationCategory1   : chr [1:7168] \"Disability Status\" \"Disability Type\" \"Disability Status\" \"Disability Status\" ...\n $ Stratification1           : chr [1:7168] \"Any Disability\" \"Self-care Disability\" \"No Disability\" \"Any Disability\" ...\n $ StratificationCategory2   : logi [1:7168] NA NA NA NA NA NA ...\n $ Stratification2           : logi [1:7168] NA NA NA NA NA NA ...\n $ CategoryID                : chr [1:7168] \"DISEST\" \"DISEST\" \"DISEST\" \"DISEST\" ...\n $ IndicatorID               : chr [1:7168] \"RACEIND\" \"AGEIND\" \"AGEIND\" \"AGEIND\" ...\n $ LocationID                : num [1:7168] 66 87 66 66 22 16 78 59 87 33 ...\n $ ResponseID                : chr [1:7168] \"RACE02\" \"AGE02\" \"AGE02\" \"AGE01\" ...\n $ DataValueTypeID           : chr [1:7168] \"AGEADJPREV\" \"PREV\" \"PREV\" \"PREV\" ...\n $ StratificationCategoryID1 : chr [1:7168] \"DISSTAT\" \"DISTYPE\" \"DISSTAT\" \"DISSTAT\" ...\n $ StratificationID1         : chr [1:7168] \"DISABL\" \"SELFDIS\" \"NODIS\" \"DISABL\" ...\n $ StratificationCategoryID2 : logi [1:7168] NA NA NA NA NA NA ...\n $ StratificationID2         : logi [1:7168] NA NA NA NA NA NA ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   LocationAbbr = col_character(),\n  ..   LocationDesc = col_character(),\n  ..   DataSource = col_character(),\n  ..   Category = col_character(),\n  ..   Indicator = col_character(),\n  ..   Response = col_character(),\n  ..   Data_Value_Unit = col_character(),\n  ..   Data_Value_Type = col_character(),\n  ..   Data_Value = col_double(),\n  ..   Data_Value_Alt = col_double(),\n  ..   Data_Value_Footnote_Symbol = col_character(),\n  ..   Data_Value_Footnote = col_character(),\n  ..   Low_Confidence_Limit = col_double(),\n  ..   High_Confidence_Limit = col_double(),\n  ..   Number = col_double(),\n  ..   WeightedNumber = col_double(),\n  ..   StratificationCategory1 = col_character(),\n  ..   Stratification1 = col_character(),\n  ..   StratificationCategory2 = col_logical(),\n  ..   Stratification2 = col_logical(),\n  ..   CategoryID = col_character(),\n  ..   IndicatorID = col_character(),\n  ..   LocationID = col_double(),\n  ..   ResponseID = col_character(),\n  ..   DataValueTypeID = col_character(),\n  ..   StratificationCategoryID1 = col_character(),\n  ..   StratificationID1 = col_character(),\n  ..   StratificationCategoryID2 = col_logical(),\n  ..   StratificationID2 = col_logical()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nsummary(cdcdata)\n\n      Year      LocationAbbr       LocationDesc        DataSource       \n Min.   :2021   Length:7168        Length:7168        Length:7168       \n 1st Qu.:2021   Class :character   Class :character   Class :character  \n Median :2021   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021                                                           \n 3rd Qu.:2021                                                           \n Max.   :2021                                                           \n                                                                        \n   Category          Indicator           Response         Data_Value_Unit   \n Length:7168        Length:7168        Length:7168        Length:7168       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n Data_Value_Type      Data_Value    Data_Value_Alt  Data_Value_Footnote_Symbol\n Length:7168        Min.   : 0.40   Min.   : 0.40   Length:7168               \n Class :character   1st Qu.: 5.80   1st Qu.: 5.80   Class :character          \n Mode  :character   Median :11.30   Median :11.30   Mode  :character          \n                    Mean   :20.79   Mean   :20.79                             \n                    3rd Qu.:25.60   3rd Qu.:25.60                             \n                    Max.   :91.10   Max.   :91.10                             \n                    NA's   :1623    NA's   :1623                              \n Data_Value_Footnote Low_Confidence_Limit High_Confidence_Limit\n Length:7168         Min.   : 0.20        Min.   : 0.80        \n Class :character    1st Qu.: 4.60        1st Qu.: 7.30        \n Mode  :character    Median : 9.30        Median :13.70        \n                     Mean   :18.33        Mean   :23.62        \n                     3rd Qu.:22.40        3rd Qu.:29.10        \n                     Max.   :87.40        Max.   :96.10        \n                     NA's   :1623         NA's   :1623         \n     Number       WeightedNumber      StratificationCategory1\n Min.   :     2   Min.   :      450   Length:7168            \n 1st Qu.:    99   1st Qu.:    32514   Class :character       \n Median :   276   Median :   117426   Mode  :character       \n Mean   :  1367   Mean   :   744895                          \n 3rd Qu.:   852   3rd Qu.:   421110                          \n Max.   :257800   Max.   :150555661                          \n NA's   :1623     NA's   :1623                               \n Stratification1    StratificationCategory2 Stratification2  CategoryID       \n Length:7168        Mode:logical            Mode:logical    Length:7168       \n Class :character   NA's:7168               NA's:7168       Class :character  \n Mode  :character                                           Mode  :character  \n                                                                              \n                                                                              \n                                                                              \n                                                                              \n IndicatorID          LocationID     ResponseID        DataValueTypeID   \n Length:7168        Min.   : 1.00   Length:7168        Length:7168       \n Class :character   1st Qu.:20.75   Class :character   Class :character  \n Mode  :character   Median :36.50   Mode  :character   Mode  :character  \n                    Mean   :40.39                                        \n                    3rd Qu.:54.25                                        \n                    Max.   :89.00                                        \n                                                                         \n StratificationCategoryID1 StratificationID1  StratificationCategoryID2\n Length:7168               Length:7168        Mode:logical             \n Class :character          Class :character   NA's:7168                \n Mode  :character          Mode  :character                            \n                                                                       \n                                                                       \n                                                                       \n                                                                       \n StratificationID2\n Mode:logical     \n NA's:7168        \n                  \n                  \n                  \n                  \n                  \n\n\n\nWe can use this command to see how the data is groups\n\nunique(cdcdata$Response)\n\n [1] \"Black, non-Hispanic\"                                    \n [2] \"45-64\"                                                  \n [3] \"18-44\"                                                  \n [4] \"Female\"                                                 \n [5] \"65+\"                                                    \n [6] \"Other / Multirace, non-Hispanic\"                        \n [7] \"Non-Veteran\"                                            \n [8] \"Asian, non-Hispanic\"                                    \n [9] \"American Indian or Alaska Native, non-Hispanic\"         \n[10] \"Male\"                                                   \n[11] \"Veteran\"                                                \n[12] \"Hispanic\"                                               \n[13] \"Native Hawaiian or Other Pacific Islander, non-Hispanic\"\n[14] \"White, non-Hispanic\"                                    \n\n\nWe see here that response contains the answers to the demographic questions. When we do exploratory analysis we have to be sure to specify what response we want.\n\nunique(cdcdata$Indicator)\n\n[1] \"Disability status and types among adults 18 years of age or older by race/ethnicity\"\n[2] \"Disability status and types among adults 18 years of age or older by age group\"     \n[3] \"Disability status and types among adults 18 years of age or older by sex\"           \n[4] \"Disability status and types among adults 18 years of age or older by veteran status\"\n\n\n\nunique(cdcdata$LocationDesc)\n\n [1] \"Guam\"                            \"HHS Region 8\"                   \n [3] \"Louisiana\"                       \"Idaho\"                          \n [5] \"U.S. Virgin Islands\"             \"United States, DC & Territories\"\n [7] \"New Hampshire\"                   \"Rhode Island\"                   \n [9] \"Nebraska\"                        \"Nevada\"                         \n[11] \"Connecticut\"                     \"Arkansas\"                       \n[13] \"HHS Region 1\"                    \"Texas\"                          \n[15] \"Oklahoma\"                        \"HHS Region 4\"                   \n[17] \"HHS Region 5\"                    \"Missouri\"                       \n[19] \"Washington\"                      \"Massachusetts\"                  \n[21] \"HHS Region 10\"                   \"Minnesota\"                      \n[23] \"Georgia\"                         \"California\"                     \n[25] \"District of Columbia\"            \"Delaware\"                       \n[27] \"Alabama\"                         \"Ohio\"                           \n[29] \"Puerto Rico\"                     \"North Carolina\"                 \n[31] \"HHS Region 2\"                    \"Iowa\"                           \n[33] \"Montana\"                         \"Kansas\"                         \n[35] \"West Virginia\"                   \"New York\"                       \n[37] \"Tennessee\"                       \"Michigan\"                       \n[39] \"Maine\"                           \"Wisconsin\"                      \n[41] \"Hawaii\"                          \"Mississippi\"                    \n[43] \"Utah\"                            \"New Mexico\"                     \n[45] \"HHS Region 6\"                    \"Arizona\"                        \n[47] \"HHS Region 7\"                    \"Colorado\"                       \n[49] \"New Jersey\"                      \"HHS Region 9\"                   \n[51] \"Virginia\"                        \"HHS Region 3\"                   \n[53] \"Illinois\"                        \"Pennsylvania\"                   \n[55] \"South Dakota\"                    \"North Dakota\"                   \n[57] \"Kentucky\"                        \"Maryland\"                       \n[59] \"Wyoming\"                         \"Vermont\"                        \n[61] \"Indiana\"                         \"Oregon\"                         \n[63] \"South Carolina\"                  \"Alaska\"                         \n\n\n\n\n\nSome variables have no data for any entry so I will remove those variable and keep the ones I want\n\ncdcdata2 &lt;- cdcdata %&gt;%\n  select(LocationDesc, Category,Indicator,Response,StratificationCategory1,Stratification1, Data_Value)\n\n\n\nI also want to keep the data to the 50 states so I will remove territiories (except for DC) and HHS Regions.\n\ncdcdata_final &lt;- cdcdata2 %&gt;%\n  filter(!(LocationDesc %in% c(\"Guam\", \"U.S. Virgin Islands\",\"HHS Region 1\",\"HHS Region 2\",\"HHS Region 3\",\"HHS Region 4\",\"HHS Region 5\",\"HHS Region 6\",\"HHS Region 7\",\"HHS Region 8\", \"HHS Region 9\",\"HHS Region 10\",\"Puerto Rico\", \"United States, DC & Territories\")))\n\n\n\nChecking to make sure it worked\n\nunique(cdcdata_final$LocationDesc)\n\n [1] \"Louisiana\"            \"Idaho\"                \"New Hampshire\"       \n [4] \"Rhode Island\"         \"Nebraska\"             \"Nevada\"              \n [7] \"Connecticut\"          \"Arkansas\"             \"Texas\"               \n[10] \"Oklahoma\"             \"Missouri\"             \"Washington\"          \n[13] \"Massachusetts\"        \"Minnesota\"            \"Georgia\"             \n[16] \"California\"           \"District of Columbia\" \"Delaware\"            \n[19] \"Alabama\"              \"Ohio\"                 \"North Carolina\"      \n[22] \"Iowa\"                 \"Montana\"              \"Kansas\"              \n[25] \"West Virginia\"        \"New York\"             \"Tennessee\"           \n[28] \"Michigan\"             \"Maine\"                \"Wisconsin\"           \n[31] \"Hawaii\"               \"Mississippi\"          \"Utah\"                \n[34] \"New Mexico\"           \"Arizona\"              \"Colorado\"            \n[37] \"New Jersey\"           \"Virginia\"             \"Illinois\"            \n[40] \"Pennsylvania\"         \"South Dakota\"         \"North Dakota\"        \n[43] \"Kentucky\"             \"Maryland\"             \"Wyoming\"             \n[46] \"Vermont\"              \"Indiana\"              \"Oregon\"              \n[49] \"South Carolina\"       \"Alaska\"              \n\n\n\n\nNow that the data is cleaned and condensed we can do some data exploration\n\n\nThere are lots of variables to look at so lets start with just looking at a histogram of disability by age group.Starting with those that are 18-44\n\neighteento44 &lt;- cdcdata_final %&gt;%\n  filter(Response == \"18-44\", Indicator == \"Disability status and types among adults 18 years of age or older by age group\")\n\n\nggplot(eighteento44, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in ages 18-44 in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 10 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\nNow we will repeat this for the other age groups\n\nagegroup2 &lt;- cdcdata_final %&gt;%\n  filter(Response == \"45-64\", Indicator == \"Disability status and types among adults 18 years of age or older by age group\")\n\n\nggplot(agegroup2, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in ages 45-64 in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nagegroup2 &lt;- cdcdata_final %&gt;%\n  filter(Response == \"65+\", Indicator == \"Disability status and types among adults 18 years of age or older by age group\")\n\n\nggplot(agegroup2, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in age 65+ in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\nThese 3 boxplots tell us how prevalence of disabilities changes as age increases. If we look at just the “Any Disability” category we see the prevalence noticably increase as age increases. We also see that a majority of those sampled have no disability.\n#####Now we will see if there is any correlation to age and disability, for this we will make a variable that combines all the disability entries minus those that selected no disability. and a new variable for age\n\ncdcdata_final &lt;- cdcdata_final %&gt;%\n  mutate(disability_yes = case_when(\n    Stratification1 %in% c(\"Any Disability\", \"Cognitive Disability\", \"Hearing Disability\", \"Independent Living Disability\", \"Mobility Disability\", \"Self-care Disability\", \"Vision Disability\") ~ \"Yes\",\n    Stratification1 == \"No Disability\" ~ \"No\",  \n    TRUE ~ NA_character_  \n  ))\n\n\ncdcdata_final &lt;- cdcdata_final %&gt;%\n  mutate(Ages = case_when(\n    Response == \"18-44\" ~ \"18-44\",\n    Response == \"45-65\" ~ \"45-65\",\n    Response == \"65+\" ~ \"65+\",\n    TRUE ~ NA_character_  \n  ))\n\n\n# Assuming `prevalence` is the outcome variable, and `ages` and `disability_yes` are predictors\nlm_model &lt;- lm(Data_Value ~ Ages + disability_yes, data = cdcdata_final)\n\n# View the summary of the model\nsummary(lm_model)\n\n\nCall:\nlm(formula = Data_Value ~ Ages + disability_yes, data = cdcdata_final)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-28.646  -7.649  -4.935   7.090  43.351 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)        64.9818     1.1963  54.319  &lt; 2e-16 ***\nAges65+             5.1644     0.8021   6.439 2.09e-10 ***\ndisability_yesYes -54.9971     1.2060 -45.603  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.27 on 787 degrees of freedom\n  (4810 observations deleted due to missingness)\nMultiple R-squared:  0.7291,    Adjusted R-squared:  0.7284 \nF-statistic:  1059 on 2 and 787 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nNow lets look at age and disability\n\nI am going to approach this a little differently than before, I will first filter my Stratification 1 data to only contain “any disability” This will cut my entries down but it should give a good representation of disability prevelance in each race.\n\n# Filter data for 'any disability' (assuming 'disability' is the variable containing disability types)\ncdcdata_disability &lt;- cdcdata_final %&gt;%\n  filter(Stratification1 == \"any disability\")\n\n\n#filter data for races\ncdcdata_race &lt;- cdcdata_final %&gt;%\n  filter(Response %in% c(\"American Indian or Alaska Native, non-Hispanic\n\",\"Asian, non-Hispanic\",\"Black, non-Hispanic\",\"Hispanic\", \"Native Hawaiian or Other Pacific Islander, non-Hispanic\",\"Other / Multirace, non-Hispanic\",\"White, non-Hispanic\")) %&gt;%\n  filter(Stratification1== \"Any Disability\")\n\n\n# Create a bar plot for disability prevalence by race\nggplot(cdcdata_race, aes(x = Response, y = Data_Value, fill = Stratification1)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +  # Position bars side by side\n  labs(title = \"Prevalence of 'Any Disability' Across Racial Groups\", \n       x = \"Race\", \n       y = \"Disability Prevalence\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels\n\nWarning: Removed 77 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n\nFrom this we gather that multiracial/other individuals had a higher prevalence of disability, lets see what disabilities.\n\n#filtering again to only include response = multirace\nmultirace &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Other / Multirace, non-Hispanic\")\n\n\nggplot(multirace, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are other/multirace in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 127 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\nFrom these we see a higher prevalence of cognitive disability in those that are multirace/other\n\n\nNext I will do the same for each race\n\nblack &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Black, non-Hispanic\")\nggplot(black, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are other/multirace in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 121 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nasian &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Asian, non-Hispanic\")\nggplot(asian, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are other/multirace in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 309 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nnative &lt;- cdcdata_final %&gt;%\n  filter(Response == \"American Indian or Alaska Native, non-Hispanic\")\nggplot(native, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are other/multirace in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 253 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nislander &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Native Hawaiian or Other Pacific Islander, non-Hispanic\")\nggplot(islander, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are other/multirace in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 390 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nwhite &lt;- cdcdata_final %&gt;%\n  filter(Response == \"White, non-Hispanic\")\nggplot(white, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are other/multirace in 2021\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\nThe last two demographics to see are sex and veteran status, I will be doing alot of what has previously been done for this section.\n\n# Filter data for 'any disability' (assuming 'disability' is the variable containing disability types)\ncdcdata_disability &lt;- cdcdata_final %&gt;%\n  filter(Stratification1 == \"any disability\")\n\n\n#filter data for genders\ncdcdata_sex &lt;- cdcdata_final %&gt;%\n  filter(Response %in% c(\"Female\", \"Male\" )) %&gt;%\n  filter(Stratification1== \"Any Disability\")\n\n\n# Create a bar plot for disability prevalence by gender\nggplot(cdcdata_sex, aes(x = Response, y = Data_Value, fill = Stratification1)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +  # Position bars side by side\n  labs(title = \"Prevalence of 'Any Disability' by sex\", \n       x = \"Sex\", \n       y = \"Disability Prevalence\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels\n\n\n\n\n\n\n\n\n\n#Disabilities in females\nfemale &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Female\")\nggplot(female, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are female\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n#Disabilities in males\nmale &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Male\")\nggplot(male, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are Male\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n# Filter data for 'any disability' (assuming 'disability' is the variable containing disability types)\ncdcdata_disability &lt;- cdcdata_final %&gt;%\n  filter(Stratification1 == \"any disability\")\n\n\n#filter data for vet status\ncdcdata_vet &lt;- cdcdata_final %&gt;%\n  filter(Response %in% c(\"Veteran\", \"Non-Veteran\" )) %&gt;%\n  filter(Stratification1== \"Any Disability\")\n\n\n# Create a bar plot for disability prevalence by gender\nggplot(cdcdata_vet, aes(x = Response, y = Data_Value, fill = Stratification1)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +  # Position bars side by side\n  labs(title = \"Prevalence of 'Any Disability' by Veteran Status\", \n       x = \"Status\", \n       y = \"Disability Prevalence\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels\n\n\n\n\n\n\n\n\n\n#Disabilities in veterans\nvet &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Veteran\")\nggplot(vet, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are Veterans\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 34 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nvet_no &lt;- cdcdata_final %&gt;%\n  filter(Response == \"Non-Veteran\")\nggplot(vet_no, aes(x = Stratification1 , y= Data_Value, color = Stratification1)) +\n  geom_boxplot() +\n  labs(title = \"Disabilities in those that are Not Veterans\",\n       x = \"Disability Type\",\n       y = \"Prevelance\"\n       ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  }
]