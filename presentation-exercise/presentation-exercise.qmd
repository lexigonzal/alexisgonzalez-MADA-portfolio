---
title: "R Coding Exercise"
---

### I found this really cool analysis from fivethirtyeight of past [bachelor and bachelorette seasons.](https://fivethirtyeight.com/features/rachels-season-is-fitting-neatly-into-bachelorette-history/) This analysis consists of a few graphics that show patterns in the bachelor franchise seasons. I'm going to recreate the second graph in this article that shows where the first impression post has led in past seasons. Here is the original graph:

![](images/Screenshot%202025-02-12%20at%207.02.55%20PM.png){width="1216"}

#### first I will load the necessary packages

```{r}
library(tidyverse)
library(ggforce)
library(here)
```

#### Now I will load in the dataset

```{r}
bach <- read.csv("/Users/alexisgonzalez/Desktop/MADA/alexisgonzalez-MADA-portfolio/presentation-exercise/bachelorette/bachelorette.csv")
```

```{r}
str(bach)
summary(bach)
```

##### I entered a photo into chat gpt and that photo has values so it used that to recreate the graphs

###How can I recreate this exact graph in R.

```{r}
data <- data.frame(
  category = c("Winners", "Runners-up", "Third place", "Fourth place", "Fifth place and below"),
  count = c(4, 4, 3, 1, 11),
  percentage = c(17.4, 17.4, 13.0, 4.3, 47.8)
)

# Define starting and ending x/y positions for connecting paths
data <- data %>%
  mutate(x_start = 1, x_end = 2.5, 
         y_end = rev(seq(1, nrow(data) * 2, by = 2)), 
         y_start = rep(5, nrow(data)))  # Single starting point

# Base plot with circles representing the first-impression roses
ggplot() +
  geom_circle(aes(x0 = 1, y0 = 5, r = 1.5), fill = "pink", alpha = 0.5) +
  geom_text(aes(x = 1, y = 5, label = "23 first-impression roses"), size = 5, fontface = "bold") +

  # Connecting paths
  geom_segment(data = data, aes(x = x_start, xend = x_end, y = y_start, yend = y_end),
               color = "pink", size = 2, alpha = 0.7) +

  # Rectangles for ranking outcomes
  geom_rect(data = data, aes(xmin = x_end, xmax = x_end + 0.5, ymin = y_end - 0.5, ymax = y_end + 0.5), 
            fill = c("darkred", "pink", "lightpink", "lightgray", "gray"), color = "black") +

  # Text labels inside rectangles
  geom_text(data = data, aes(x = x_end + 0.25, y = y_end, label = count), color = "white", fontface = "bold", size = 5) +

  # Text labels for category names
  geom_text(data = data, aes(x = x_end + 1, y = y_end, label = paste0(category, "\n", percentage, "%")), 
            hjust = 0, size = 5, fontface = "bold") +

  # Theme adjustments
  theme_void() +
  ggtitle("Where first-impression roses lead") +
  theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))


```

#### I wanted the modify the design a bit to match the orignal more so I asked chat gpt this

###The design is good but I want there to be 23 roses inside the "first impression roses" bubble and I want the lines connecting to the counts to match the color of the count box. ignore the dataset, modify the code previously given.

```{r}
# Load necessary libraries
library(ggplot2)
library(ggforce)
library(dplyr)
library(ggimage)

# Define dataset for categories and colors
data <- data.frame(
  category = c("Winners", "Runners-up", "Third place", "Fourth place", "Fifth place and below"),
  count = c(4, 4, 3, 1, 11),
  percentage = c(17.4, 17.4, 13.0, 4.3, 47.8),
  color = c("darkred", "pink", "lightpink", "lightgray", "gray")
)

# Define starting and ending x/y positions for connecting paths
data <- data %>%
  mutate(x_start = 1, x_end = 2.5, 
         y_end = rev(seq(1, nrow(data) * 2, by = 2)), 
         y_start = rep(5, nrow(data)))

# Generate 23 random (x, y) positions inside the circle
set.seed(123)  # For reproducibility
n_roses <- 23
angles <- runif(n_roses, 0, 2 * pi)  # Random angles
radii <- sqrt(runif(n_roses, 0, 1)) * 1.1 # Random radii to keep roses inside

# Convert polar to Cartesian coordinates
roses <- data.frame(
  x = 1 + radii * cos(angles),
  y = 5 + radii * sin(angles)
)

rose_image <- "/Users/alexisgonzalez/Desktop/MADA/alexisgonzalez-MADA-portfolio/presentation-exercise/images/Rose.png"   

# Create the plot
ggplot() +
  
  # Bubble with scattered roses
  geom_circle(aes(x0 = 1, y0 = 5, r = 1.5), fill = "white", color = "black") +
  geom_image(data = roses, aes(x = x, y = y, image = rose_image), size = 0.06) +
  geom_text(aes(x = 1, y = 7, label = "23 first-impression roses"), size = 5, fontface = "bold") +
  
  # Connecting paths with matching colors
  geom_segment(data = data, aes(x = x_start, xend = x_end, y = y_start, yend = y_end, color = color),
               size = 2, alpha = 0.8, lineend = "round") +
  
  # Rectangles for ranking outcomes
  geom_rect(data = data, aes(xmin = x_end, xmax = x_end + 0.5, ymin = y_end - 0.5, ymax = y_end + 0.5, fill = color),
            color = "black") +

  # Text labels inside rectangles
  geom_text(data = data, aes(x = x_end + 0.25, y = y_end, label = count), color = "white", fontface = "bold", size = 5) +

  # Text labels for category names
  geom_text(data = data, aes(x = x_end + 1, y = y_end, label = paste0(category, "\n", percentage, "%")), 
            hjust = 0, size = 5, fontface = "bold") +

  # Theme adjustments
  scale_fill_identity() +
  scale_color_identity() +
  theme_void() +
  ggtitle("Where first-impression roses lead") +
  theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))


```

#### Now I will create a data table that shows who are in the categories shown in the graph above, what season they're in and how many roses they won all season.

#####First I want to filter out all contestants that did not recieve a first impression rose

```{r}
first_impression_contestants <- bach %>%
  filter(ELIMINATION.1 == "R1")
```

```{r}
summary(first_impression_contestants)
str(first_impression_contestants)

```

##### I noticed that the dataset was showing multiple people getting the first impression rose on a single season. Only 1 of those are given out per season so I will remove the entries that did not actaully recieve the first impression rose. I can figure this out with a simple google search.

```{r}
# Reset row names
row.names(first_impression_contestants) <- NULL
first_imp2 <- first_impression_contestants[-c(5, 6, 7, 9, 10, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 44, 16, 17), ]

```

```{r}
first_imp2
```
```{r}
length(first_imp2$CONTESTANT)
length(first_imp2$SEASON)
length(first_imp2$SHOW)
```

####Now I will create the table, inserting a photo on the contestant

```{r}
# Create the data frame with contestant details
contestants_data <- data.frame(
  contestant = first_imp2$CONTESTANT,
  season = first_imp2$SEASON,
  show = first_imp2$SHOW,
  category = c("Fifth place and Below","Winners","Fifth place and Below","Fifth place and Below","Winners", "Winners", "Runners-up", "Fifth place and Below","Fourth place","Fourth place","Winners","Fifth place and Below","Winners","Fifth place and Below","Winners","Fifth place and Below","Fourth place","Fourth place","Fourth place","Runners-up","Third Place","Fourth place","Third Place","Fifth place and Below","Fifth place and Below","Fifth place and Below"),
  roses_received = c(4, 3, 3, 3, 2, 2, 3, 2, 1, 2, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 3, 2, 2, 2, 2, 1),
  relationship_status = c("Single", "Single", "Single", "Single", "Single", "Single", "Single", "Single", "Married", "Single", "Single", "Single", "Single", "Single", "Single", "Married", "Single", "Single", "Single", "Single", "Single", "Married", "Single", "Single", "Single", "Single"),
  image_url = c("/Users/alexisgonzalez/Downloads/images.png",  # Example image URL for "Single"
                "/Users/alexisgonzalez/Downloads/images.png",  # Example image URL for "In a Relationship"
                "/Users/alexisgonzalez/Downloads/images.png",  # Example image URL for "Single"
                "/Users/alexisgonzalez/Downloads/images.png",  # Example image URL for "In a Relationship"
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png",
                "/Users/alexisgonzalez/Downloads/images.png") 
)

# Replace relationship_status with image HTML
contestants_data$relationship_status <- paste0('<img src="', contestants_data$image_url, '" width="50" height="50">')

# Load necessary libraries
library(kableExtra)
library(dplyr)

# Create the table using kableExtra
# Create the table using kableExtra
contestants_data %>%
  kable("html", escape = FALSE) %>%  # Create HTML table
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE, position = "center") %>%  # Stripe and hover effects
  column_spec(1, bold = TRUE, color = "white", background = "darkpink") %>%  # Style 'contestant' column
  column_spec(2, bold = TRUE) %>%  # Bold 'season' column
  column_spec(3, background = "lightpink") %>%  # Style 'show' column
  column_spec(4, color = "blue") %>%  # Style 'category' column
  column_spec(5, background = "lightpink") %>%  # Style 'roses_received' column
  column_spec(6, background = "lightpink") %>%  # Style 'relationship_status' column
  add_header_above(c(" ", "Contestants Info" = 6))  # Add header and table title
```
